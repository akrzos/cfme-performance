---
#
# Import a database
#

# On 5.4 appliances / has 9.8GiB total space, typically 7.5GiB available
- name: Get database dump (5.4.x appliances)
  get_url:
    url: "{{db_dumps[appliances[inventory_hostname].dbdump]}}"
    dest: "/opt/rh/postgresql92/root/var/lib/pgsql/data/{{appliances[inventory_hostname].dbdump}}"
  when: is54

# 5.5+ appliances have ~1GiB in the /tmp directory, thus most database exports will fill the
# tmp partition and we must rely on wget rather than the ansible get_url module
- name: Get database dump (5.5.x appliances)
  shell: "wget {{db_dumps[appliances[inventory_hostname].dbdump]}} -O /var/opt/rh/rh-postgresql94/lib/pgsql/data/{{appliances[inventory_hostname].dbdump}}"
  when: is55

- name: Get database dump (5.6.x appliances)
  shell: "wget {{db_dumps[appliances[inventory_hostname].dbdump]}} -O /var/opt/rh/rh-postgresql94/lib/pgsql/data/{{appliances[inventory_hostname].dbdump}}"
  when: is56

- name: Get database dump (5.7.x appliances)
  shell: "wget {{db_dumps[appliances[inventory_hostname].dbdump]}} -O /var/opt/rh/rh-postgresql95/lib/pgsql/data/{{appliances[inventory_hostname].dbdump}}"
  when: is57

# Ignore_errors since appliances might not have collectd
- name: Stop CFME/Miq Services
  service: name={{item}} state=stopped
  with_items:
    - evmserverd
    - collectd
  ignore_errors: true

- name: Drop existing database
  command: dropdb vmdb_production

- name: Create new database
  command: createdb vmdb_production

- name: Create role 'cloudforms'
  command: createuser cloudforms

- name: Import database (5.4.x appliances)
  command: "pg_restore --dbname=vmdb_production /opt/rh/postgresql92/root/var/lib/pgsql/data/{{appliances[inventory_hostname].dbdump}}"
  when: is54

- name: Import database (5.5.x appliances)
  command: "pg_restore --dbname=vmdb_production /var/opt/rh/rh-postgresql94/lib/pgsql/data/{{appliances[inventory_hostname].dbdump}}"
  when: is55

- name: Import database (5.6.x appliances)
  command: "pg_restore --dbname=vmdb_production /var/opt/rh/rh-postgresql94/lib/pgsql/data/{{appliances[inventory_hostname].dbdump}}"
  when: is56

- name: Import database (5.7.x appliances)
  command: "pg_restore --dbname=vmdb_production /var/opt/rh/rh-postgresql95/lib/pgsql/data/{{appliances[inventory_hostname].dbdump}}"
  when: is57

- name: Invalidate all passwords since the v2_key is now different
  shell: "cd /var/www/miq/vmdb/; bundle exec tools/fix_auth.rb --v2 --invalid bogus"

- name: Run rake db:migrate
  shell: "cd /var/www/miq/vmdb/; bin/rake db:migrate"

- name: Run rake evm:automate:reset
  shell: "cd /var/www/miq/vmdb/; bin/rake evm:automate:reset"

# Ignore_errors since appliances might not have collectd
- name: Start CFME/Miq Services
  service: name={{item}} state=started
  with_items:
    - evmserverd
    - collectd
  ignore_errors: true
